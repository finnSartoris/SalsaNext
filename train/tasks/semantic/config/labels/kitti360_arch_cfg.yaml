################################################################################
# training parameters
################################################################################
train:
  loss: "xentropy"       # must be either xentropy or iou
  max_epochs: 150
  lr: 0.01              # sgd learning rate or step size (sgd = stochastic gradient descent)
  wup_epochs: 1          # warmup during first XX epochs (can be float)
  momentum: 0.9          # sgd momentum
  lr_decay: 0.99         # learning rate decay per epoch after initial cycle (from min lr)
  w_decay: 0.0001        # weight decay
  batch_size: 24            # batch size
  report_batch: 50        # every x batches, report loss 
  report_epoch: 1        # every x epochs, report validation set
  epsilon_w: 0.001       # class weight w = 1 / (content + epsilon_w)
  save_summary: False    # Summary of weight histograms for tensorboard
  save_scans: True       # False doesn't save anything, True saves some
    # sample images (one per batch of the last calculated batch)
  # in log folder
  show_scans: False      # show scans during training
  workers: 4             # number of threads to get data

################################################################################
# postproc parameters
################################################################################
post:
  CRF: #steht für Conditional Random Fields
    use: False
    train: True
    params: False # this should be a dict when in use
  KNN: #steht für k-Nearest Neighbor
    use: True # This parameter default is false
    params:
      knn: 5
      search: 5
      sigma: 1.0
      cutoff: 1.0

################################################################################
# classification head parameters
################################################################################
# dataset (to find parser)
dataset:
  labels: "kitti360"
  scans: "kitti360"
  max_points: 150000
  sensor:
    name: "HDL64"
    type: "spherical" # projective -> the unstructured 3D lidar point cloud is projected onto a spherical surface to generate the lidars native Range View (RV) -> dense and compact point cloud representation which allows standard convolution operations
    fov_up: 3   #field of view up
    fov_down: -25   #field of view down
    img_prop:
      width: 2048
      height: 64
    img_means: #range,x,y,z,signal
      - 11.27
      - -0.01
      - 0.27
      - -1.01
      - 0.3
    img_stds: #range,x,y,z,signal
      - 9.70
      - 12.14
      - 8.48
      - 0.84
      - 0.15